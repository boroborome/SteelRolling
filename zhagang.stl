
[LD     SM0.1] {
  MOVW   +20, BilletCounterTable
  FILL   0, BilletCounterTableSize, 20

  FILL   0, HistoryDataW, 20
  MOVD 0,HistoryIndex

  MOVW   16#0201, SW0
  MOVB   16#F8, SMB37
  HDEF   0, 0

  MOVB   16#F8, SMB47
  HDEF   1, 0

  MOVB   16#F8, SMB147
  HDEF   4, 3

  HSC    0
  HSC    1
  HSC    4
}

[LD     BilletHotDetect] {
  [EU] {
    MOVD 0,SMD38
    HSC 0
  }

  [ED] {
    MOVD BilletRuleCounter,AC1
    [AD> AC1,10] {
      ATT    AC1, BilletCounterTable
    }
  }
}

[LD     SteelHotDetect] {
  [EU] {
    MOVD 0,SMD48
    HSC 1
  }
  [ED] {
    MOVD SteelRuleCounter,AC1
    [AD> AC1,10] {
      [AW= SW0,16#0408] {
        DTR AC1,AC1
        /R RuleCounterRate,AC1
        MOVR AC1,CP_OL1
      }
    }
  }
}

# Initialize Status
[LD S0.1] {
  [A S1.0] {
    S MonitorControlHight,1
    [A TravelSwitchHight] {
      R MonitorControlHight,1
      MOVD MonitorCounter,MaxGapValue
      MOVW 16#0202,SW0
    }
  }

  [LD S1.1] {
    S MonitorControlLow,1
    [A TravelSwitchLow] {
      R MonitorControlLow,1
      -D MonitorCounter,MaxGapValue
      MOVD 0,SMD148
      HSC 4
      MOVW 16#0401,SW0
    }
  }
}

# Working Status
[LD S0.2] {
  [A S1.0] { # Waiting Billet
    [AW> BilletCounterTableSize,0] {
      FIFO   BilletCounterTable, AC1
      [AW>    AC1, 50] {
        DTR AC1,CurrentBilletCount
        MOVR CurrentBilletCount,CurrentBilletLength
        /R  RuleCounterRate,CurrentBilletLength

        # Calculate TargetDG
        [AR> CP_DG2,0.0] {
          # IS_OW=(OG1-OG2)/(IL1/OL1-IL2/OL2)
          MOVR CP_DG1,IS_OW
          -R CP_DG2,IS_OW
          MOVR CP_IL1,AC1
          /R CP_OL1,AC1
          MOVR CP_IL2,AC2
          /R CP_OL2,AC2
          -R AC2,AC1
          /R AC1,IS_OW

          #OSX_OW=(OL2*OG2*IL1-IL2*OL1*OG1)/(IL2*OL1-OL2*IL1)
          MOVR CP_OL2,AC1
          *R CP_DG2,AC1
          *R CP_IL1,AC1

          MOVR CP_IL2,AC2
          *R CP_OL1,AC2
          *R CP_DG1,AC2
          -R AC2,AC1

          MOVR CP_IL2,AC2
          *R CP_OL1,AC2

          MOVR CP_OL2,AC3
          *R CP_IL1,AC3
          -R AC3,AC2

          /R AC2,AC1
          MOVR AC1,OSX_OW

          # IL/OL*(IS_OW)-OSX_OW
          MOVR IS_OW,AC1
          *R CurrentBilletLength,AC1
          /R TargetSteelLength,AC1
          -R OSX_OW,AC1
          MOVR AC1,TargetDG
        }

        [AR<= CP_DG2,0.0] {
          [AR> CP_DG1,0.0] {
            MOVR CP_IL1,AC1
            MOVR CP_DG1,AC2
          }
          [AR<= CP_DG1,0.0] {
            MOVR ExpectBilletLength,AC1
            MOVR StandardK1Gap,AC2
          }
          MOVR 0.1,AC3
          [AR< CurrentBilletLength,AC1] {
            MOVR -0.1,AC3
          }
          +R AC3,AC2
          MOVR AC2,TargetDG
        }

        # Calcualte MonitorCounterTarget
        MOVR TargetDG,AC1
        *R MonitorGapRate,AC1
        ROUND AC1,MonitorCounterTarget

        # Move Block
        BMD CP_IL4,CP_IL5,12
        MOVR CurrentBilletLength,CP_IL1
        MOVR TargetDG,CP_DG1
        MOVR 0.0,CP_OL1

        MOVW 16#0402,SW0
      }
    }
  }

  [A S1.1] { # Seek Gap
    MOVD MonitorCounterTarget,AC1
    -D MonitorCounter,AC1
    [AD> AC1,0] {
      S MonitorControlHight,1
      R MonitorControlLow,1
    }
    [AD< AC1,0] {
      S MonitorControlLow,1
      R MonitorControlHight,1
      *D -1,AC1
    }
    [AD<= AC1,MonitorControlAccuracy] {
      R MonitorControlHight,1
      R MonitorControlLow,1
      MOVW 16#0404,SW0
    }
    [A MonitorControlOffLine] {
      R MonitorControlHight,1
      R MonitorControlLow,1
      MOVW 16#0404,SW0
    }
  }

  [A S1.2] { # Ready To Work
    [A ElectricityK1Working] {
      [A SteelHotDetect] {
        MOVW 16#0408,SW0
      }
    }
  }

  [A S1.3] { # Working
    [AN ElectricityK1Working] {
      [AR> CP_OL1,0.0] {
        MOVW 16#0401,SW0
      }
    }
  }
}
