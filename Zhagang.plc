TITLE=
Network 1
LD     SM0.1
LPS
  MOVW   +20, BilletCounterTable
  AENO
  FILL   0, BilletCounterTableSize, 20

LRD
  FILL   0, HistoryDataW, 20
  AENO
  MOVD 0,HistoryIndex
LPP
  MOVW   16#21, SW0
  MOVB   16#F8, SMB37
  HDEF   0, 0

  MOVB   16#F8, SMB47
  HDEF   1, 0

  MOVB   16#F8, SMB147
  HDEF   4, 3

  HSC    0
  HSC    1
  HSC    4

Network 2
LD     BilletHotDetect
LPS
  EU
  MOVD 0,SMD38
  HSC 0
LPP
  ED
  MOVD BilletRuleCounter,AC1
  AD> AC1,10
  ATT    AC1, BilletCounterTable


Network 3
LD     SteelHotDetect
LPS
  EU
  MOVD 0,SMD48
  HSC 1
LPP
  ED
  MOVD SteelRuleCounter,AC1
  AD> AC1,10
  MOVD AC1,CP_OL2

Network 4
LD     S0.2
MOVB   1, QB0                      // 空闲亮灯
AENO
LPS
  AW= BilletCounterTableSize,0
  LPS
    MOVR   ZeroK1Gap, MonitorOutputVoltage
    AENO
    -R K1GapWhenMonitorIn0,MonitorOutputVoltage
    AENO
    /R     MonitorGapRate, MonitorOutputVoltage

  // MonitorOutput=MonitorOutputVoltage/(10/32767)
  LPP
    MOVR   MonitorOutputVoltage, AC1
    AENO
    *R     32767.0, AC1
    AENO
    /R     10.0, AC1
    AENO
    MOVR   AC1, MonitorOutput
LPP
  MOVW   BilletCounterTableSize, AC1
  AENO
  AW<>   AC1, 0
  FIFO   BilletCounterTable, AC1
  AENO
  AW>    AC1, 50
  // CurrentBilletTime
  LPS
    ITD    AC1, AC1
    AENO
    DTR    AC1, CurrentBilletTime

  // CurrentBilletLength=CurrentBilletTime*BilletSpeed
  LRD
    MOVR   CurrentBilletTime, CurrentBilletLength
    AENO
    *R     BilletSpeed, CurrentBilletLength

  // DeltaK1Gap=(CurrentBilletLength-ExpectBilletLength)
  // *BilletWidth*BilletHeight/(TargetSteelWidth*TargetSteelLength)
  LRD
    MOVR   CurrentBilletLength, AC1
    AENO
    -R     ExpectBilletLength, AC1
    AENO
    *R     BilletWidth, AC1
    AENO
    *R     BilletHeight, AC1
    AENO
    /R     TargetSteelWidth, AC1
    AENO
    /R     TargetSteelLength, AC1
    AENO
    MOVR   AC1, DeltaK1Gap

  // TargetK1Gap=ZeroK1Gap+DeltaK1Gap
  LRD
    MOVR   ZeroK1Gap, AC1
    AENO
    +R     DeltaK1Gap, AC1
    AENO
    MOVR   AC1, TargetK1Gap

  // MonitorOutputVoltage=(TargetK1Gap-K1GapWhenMonitorIn0)/MonitorGapRate
  LRD
    MOVR   TargetK1Gap, MonitorOutputVoltage
    AENO
    -R K1GapWhenMonitorIn0,MonitorOutputVoltage
    AENO
    /R     MonitorGapRate, MonitorOutputVoltage

  // MonitorOutput=MonitorOutputVoltage/(10/32767)
  LRD
    MOVR   MonitorOutputVoltage, AC1
    AENO
    *R     32767.0, AC1
    AENO
    /R     10.0, AC1
    AENO
    MOVR   AC1, MonitorOutput
  LRD
    MOVD &HistoryData,AC1
    AENO
    MOVD HistoryIndex,AC0
    AENO
    *D 28,AC0
    AENO
    +D AC0,AC1
    AENO
    BMD CurrentBilletTime,*AC1,6
    AENO
    INCD HistoryIndex
    AENO
    AD> HistoryIndex,10
      MOVD 0,HistoryIndex
  LPP
    MOVB   2, SB0                      // 调整状态

Network 5
// 等待状态
LD     S0.1
MOVB   3, QB0                      //等待状态灯
//模拟运行状态
TON    T103, +200
AW> ElectricityK1,ElectricityK1Working
MOVB   4, SB0                      // 调整状态
AENO
R      T103, 1

Network 6
// 运行状态
LD     S0.2
MOVB   7, QB0                      //运行状态灯
AW< ElectricityK1,ElectricityK1Working
MOVB   1, SB0                      // 调整状态

Network 7
//Timeout
LD     T103
R      T103, 1
MOVB   1, SB0

Network 8
LD S0.1
LPS
  A S1.0
  S MonitorControlHight,1
  A TravelSwitchHight
  R MonitorControlHight,1
  MOVD MonitorCounter,MaxGapValue
  MOVB 2,SB1
LRD
  LD S1.1
  S MonitorControlLow,1
  A TravelSwitchLow
  R MonitorControlLow,1
  -D MonitorCounter,MaxGapValue
  MOVD 0,SMD148
  MOVW 16#41,SW0
LPP

Network 9
LD S0.2
LPS
  A S1.0
  AW> BilletCounterTableSize,0
  FIFO   BilletCounterTable, AC1
  AENO
  AW>    AC1, 50
  DTR AC1,CurrentBilletCount
  AENO
  MOVR CurrentBilletCount,CurrentBilletLength
  AENO
  /R  RuleCounterRate,CurrentBilletLength
  AENO

  LPS
    AR> CP_OG2,0.0
    MOVR CP_OG1,IS_OW
    AENO
    -R CP_OG2,IS_OW
    AENO
    MOVR CP_IL1,AC1
    AENO
    /R CP_OL1,AC1
    AENO
    MOVR CP_IL2,AC2
    AENO
    /R CP_OL2,AC2
    AENO
    -R AC2,AC1
    AENO
    /R IS_OW,AC1

    //(OL2*OG2*IL1-IL2*OL1*OG1)/(IL2*OL1-OL2*IL1)
    AENO
    MOVR CP_OL2,AC1
    AENO
    *R CP_OG2,AC1
    AENO
    *R CP_IL1,AC1

    AENO
    MOVR CP_IL2,AC2
    AENO
    *R CP_OL1,AC2
    AENO
    *R CP_OG1,AC2
    AENO
    -R AC2,AC1

    AENO
    MOVR CP_IL2,AC2
    AENO
    *R CP_OL1,AC2

    AENO
    MOVR CP_OL2,AC3
    AENO
    *R CP_IL1,AC3
    AENO
    -R AC3,AC2

    AENO
    /R AC2,AC1
    AENO
    MOVR AC1,OSX_OW

    //IL/OL*(IS_OW)-OSX_OW
    AENO
    MOVR IS_OW,AC1
    AENO
    *R CurrentBilletLength,AC1
    AENO
    /R TargetSteelLength,AC1
    AENO
    -R OSX_OW,AC1
    AENO
    MOVR AC1,TargetOG

    //(TargetOG-3)*MonitorGapRate
    AENO
    -R 3.0,AC1
    AENO
    *R MonitorGapRate,AC1
    AENO
    MOVR AC1,MonitorCounterTarget
    AENO
    MOVW 16#42,SW0
  LRD
    AR<= CP_OG2,0.0
    LPS
      LPS
        AR> CP_OG1,0.0
        MOVR CP_IL1,AC1
        AENO
        MOVR CP_OG1,AC2
      LPP
        AR<= CP_OG1,0.0
        MOVR ExpectBilletLength,AC1
        AENO
        MOVR StandardK1Gap,AC2
    LRD
      MOVR 0.1,AC3
      LPS
        AR< CurrentBilletLength,AC1
        MOVR -0.1,AC3
      LPP
        +R AC3,AC2
        AENO
        MOVR TargetOG,AC2
        AENO
        MOVR AC2,AC1
        AENO
        -R 3.0,AC1
        AENO
        *R MonitorGapRate,AC1
        AENO
        MOVR AC1,MonitorCounterTarget
        AENO
        MOVW 16#42,SW0
    LPP
      BMD CP_IL1,CP_IL2,3
      AENO
      MOVR CurrentBilletLength,CP_IL1
      AENO
      MOVR TargetOG,CP_OG1
      AENO
      MOVR 0.0,CP_OL1
  LPP

LRD
  A S1.1
  MOVR 0.0,CP_OL1
LRD
  A S1.2
  MOVR 0.0,CP_OL1
LPP
  A S1.3
  MOVR 0.0,CP_OL1
